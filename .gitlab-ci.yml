variables:
  DEPLOY_USER: "infrastructure"
  SERVICE_NAME: "ev-dashboard"
  DOMAIN_DEV: "ev.ltestl.com"
  NETWORK: "ev-network"

.add-ssh-private-key-script: &add-ssh-private-key
  - apk update
  - apk add -qq
  - 'which ssh-agent || ( apk add -qq openssh-client )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - ssh-keyscan -p 22 -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

.deploy-script: &deploy
  - ssh -T $DEPLOY_USER@$DEPLOY_SERVER "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  - ssh -T $DEPLOY_USER@$DEPLOY_SERVER "docker pull $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA"
  - ssh -T $DEPLOY_USER@$DEPLOY_SERVER "docker rm -f $SERVICE_NAME && docker run --restart always -d --name $SERVICE_NAME $EXTRA_SERVICE_PARAMS $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA sh -c 'serve -s build'"

.build-and-push-script: &build-and-push
  - docker build -t $SERVICE_NAME --cache-from $CI_REGISTRY_IMAGE/latest -f dockerfiles/app/Dockerfile --build-arg VITE_API_URL=$VITE_API_URL .
  - docker tag $SERVICE_NAME $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA
  - docker tag $SERVICE_NAME $CI_REGISTRY_IMAGE/latest
  - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_SHORT_SHA
  - docker push $CI_REGISTRY_IMAGE/latest
  - echo $CI_REGISTRY/$CI_COMMIT_SHORT_SHA

services:
  - docker:dind

stages:
  - test
  - build
  - deploy

test:
  image: docker/compose:latest
  tags:
    - $RUNNER_TAG
  stage: test
  environment:
    name: testing
  only:
    - merge_requests
  before_script:
    - docker-compose -f docker-compose-tests.yml down
    - docker system prune -f
  script:
    - echo "Running tests"
    - docker-compose -f docker-compose-tests.yml build $SERVICE_NAME
    - docker-compose -f docker-compose-tests.yml up --abort-on-container-exit --exit-code-from $SERVICE_NAME --quiet-pull $SERVICE_NAME
  after_script:
    - docker-compose -f docker-compose-tests.yml down --volumes

build&push-dev:
  image: docker:stable
  tags:
    - $RUNNER_TAG
  stage: build
  only:
    refs:
      - dev
  variables:
    VITE_API_URL: development
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    *build-and-push

deploy-dev:
  image: docker:git
  tags:
    - $RUNNER_TAG
  stage: deploy
  only:
    refs:
      - dev
  variables:
    DEPLOY_SERVER: $DEPLOY_SERVER_DEV
    EXTRA_SERVICE_PARAMS: $EXTRA_SERVICE_PARAMS_DEV
  before_script:
    - *add-ssh-private-key
  script:
    - *deploy

deploy-staging:
  image: docker:git
  tags:
    - $RUNNER_TAG
  stage: deploy
  only:
    refs:
      - staging
  variables:
    DEPLOY_SERVER: $DEPLOY_SERVER_STAGING
    EXTRA_SERVICE_PARAMS: $EXTRA_SERVICE_PARAMS_STAGING
  before_script:
    - *add-ssh-private-key
  script:
    - *deploy

deploy-production:
  image: docker:git
  tags:
    - $RUNNER_TAG
  stage: deploy
  only:
    refs:
      - main
  variables:
    DEPLOY_SERVER: $DEPLOY_SERVER_PRODUCTION
    EXTRA_SERVICE_PARAMS: $EXTRA_SERVICE_PARAMS_PRODUCTION
  before_script:
    - *add-ssh-private-key
  script:
    - *deploy
